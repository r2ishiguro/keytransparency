version: "3"
services:
  prometheus:
    depends_on:
      - kt-server
      - kt-signer
    image: us.gcr.io/key-transparency/prometheus
    build:
      context: .
      dockerfile: deploy/prometheus/Dockerfile
    restart: always
    ports:
      - 9090:9090

  db:
    image: us.gcr.io/key-transparency/db
    build:
      context: ../.
      dockerfile: keytransparency/deploy/mysql-trillian/Dockerfile
    restart: always
    environment:
      MYSQL_PASSWORD: zaphod
      MYSQL_USER: test
      MYSQL_DATABASE: test
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"

  trillian-log:
    depends_on:
      - db
    image: us.gcr.io/key-transparency/trillian_log_server
    build: 
      context: ../trillian
      dockerfile: server/trillian_log_server/Dockerfile
    restart: always
    ports:
      - "8090:8090" # gRPC
      - "8091:8091" # HTTP & Metrics
    entrypoint:
      - /go/bin/trillian_log_server
      - --mysql_uri=test:zaphod@tcp(db:3306)/test
      - --rpc_endpoint=0.0.0.0:8090
      - --http_endpoint=0.0.0.0:8091
      - --alsologtostderr 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/metrics"]
      interval: 30s
      timeout: 30s
      retries: 3

  trillian-log-signer:
    depends_on:
      - db
    image: us.gcr.io/key-transparency/trillian_log_signer
    build:
      context: ../trillian
      dockerfile: server/trillian_log_signer/Dockerfile
    restart: always
    ports:
      - "8092:8091" # HTTP & Metrics
    entrypoint: 
      - /go/bin/trillian_log_signer
      - --mysql_uri=test:zaphod@tcp(db:3306)/test
      - --http_endpoint=0.0.0.0:8091
      - --sequencer_guard_window=0s
      - --sequencer_interval=1s
      - --num_sequencers=1
      - --batch_size=50
      - --force_master=true
      - --alsologtostderr
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/metrics"]
      interval: 30s
      timeout: 30s
      retries: 3

  trillian-map:
    depends_on:
      - db
    image: us.gcr.io/key-transparency/trillian_map_server
    build: 
      context: ../trillian
      dockerfile: server/trillian_map_server/Dockerfile
    restart: always
    ports:
      - "8093:8090" # gRPC
      - "8094:8091" # HTTP & Metrics
    entrypoint:
      - /go/bin/trillian_map_server
      - --mysql_uri=test:zaphod@tcp(db:3306)/test
      - --rpc_endpoint=0.0.0.0:8090
      - --http_endpoint=0.0.0.0:8091
      - --alsologtostderr 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/metrics"]
      interval: 30s
      timeout: 30s
      retries: 3

  kt-server:
    depends_on:
      - db
      - trillian-log
      - trillian-map
    build:
      context: ..
      dockerfile: ./keytransparency/cmd/keytransparency-server/Dockerfile
    image: us.gcr.io/key-transparency/keytransparency-server
    restart: always
    ports:
      - "8080:8080" # json & grpc
      - "8081:8081" # metrics
    entrypoint:
      - /go/bin/keytransparency-server
      - --addr=0.0.0.0:8080
      - --db=test:zaphod@tcp(db:3306)/test
      - --log-id=$LOG_ID
      - --log-url=trillian-log:8090
      - --map-id=$MAP_ID
      - --map-url=trillian-map:8090
      - --vrf=/kt/vrf-key.pem
      - --tls-key=/kt/server.key
      - --tls-cert=/kt/server.crt
      - --auth-type=insecure-fake
      - --alsologtostderr
      - --v=5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/debug/var"]
      interval: 30s
      timeout: 10s
      retries: 5

  kt-signer:
    depends_on:
      - db
      - trillian-log
      - trillian-map
    build:
      context: ..
      dockerfile: ./keytransparency/cmd/keytransparency-sequencer/Dockerfile
    image: us.gcr.io/key-transparency/keytransparency-sequencer
    restart: always
    entrypoint:
      - /go/bin/keytransparency-sequencer
      - --db=test:zaphod@tcp(db:3306)/test
      - --log-id=$LOG_ID
      - --log-url=trillian-log:8090
      - --map-id=$MAP_ID
      - --map-url=trillian-map:8090
      - --min-period=5s
      - --max-period=5m
      - --alsologtostderr
      - --v=5

  kt-monitor:
    depends_on:
      - kt-server
      - kt-signer
    build:
      context: ..
      dockerfile: ./keytransparency/cmd/keytransparency-monitor/Dockerfile
    entrypoint:
      - /go/bin/keytransparency-monitor
      - --addr=0.0.0.0:8099
      - --kt-url=kt-server:8080
      - --poll-period=5s
      - --tls-key=genfiles/server.key
      - --tls-cert=genfiles/server.crt
      - --sign-key=/kt/monitor_sign-key.pem
      - --password=towel
      - --alsologtostderr
      - --v=3
    image: us.gcr.io/key-transparency/keytransparency-monitor
    restart: always
    ports:
    - "8099:8099" # gRPC / HTTPS
